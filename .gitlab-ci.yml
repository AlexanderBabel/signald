.arm-build:
  tags: [arm-builder]
  rules:
  - if: '$CI_PROJECT_NAMESPACE == "signald"'
    when: on_success
  - when: manual
    allow_failure: true

stages:
  - lint
  - build
  - test
  - docs
  - downstreams

variables:
  zkgroup_ver: "0.7.0"
  DOCKER_TLS_CERTDIR: "/certs"

services:
  - docker:20.10.0-dind

clang-format:
  image: debian:latest
  stage: lint
  before_script:
    - apt-get update && apt-get install -y clang-format git python3 wget make
  script:
    - ci/format.sh
  needs: []

build java8 x86:
  image: openjdk:8-jdk
  stage: build
  needs: []
  before_script:
    - apt-get update && apt-get install -y make
  except:
    - schedules
  script:
    - make installDist
  artifacts:
    paths:
      - build/

build java11 x86:
  image: openjdk:11-jdk
  stage: build
  needs: []
  before_script:
    - apt-get update && apt-get install -y make
  except:
    - schedules
  script:
    - make installDist
  artifacts:
    paths:
      - build/

build java11 aarch64 glibc:
  extends: .arm-build
  image: debian
  stage: build
  needs:
    - project: signald/zkgroup
      job: "zkgroup aarch64-glibc aarch64"
      ref: main
      artifacts: true
  before_script:
    - apt update && apt install -y make openjdk-11-jdk-headless git
  script:
    - make installDist
    - tools/repackage-zkgroup.sh zkgroup/target/release/libzkgroup.so $zkgroup_ver
  artifacts:
    paths:
      - build/

build deb x86:
  image: registry.git.callpipe.com/finn/debian-repo-builder:latest
  stage: build
  needs: []
  before_script:
    - export VERSION=$(./version.sh)
    - echo "Building signald version $VERSION"
  script:
    - gbp dch --ignore-branch --debian-tag="%(version)s" --git-author --new-version="$VERSION"
    - cat debian/changelog
    - dpkg-buildpackage -b
    - cp -rv ../signald_${VERSION}* .
  except:
    - schedules
  cache:
    key: deb-builder
  artifacts:
    paths:
      - "signald_*"

build deb aarch64:
  image: registry.gitlab.com/signald/infrastructure/signald-builder-arm:d6b7bebf
  stage: build
  extends: .arm-build
  needs:
    - project: signald/zkgroup
      job: "zkgroup aarch64-glibc aarch64"
      ref: main
      artifacts: true
  before_script:
    - export VERSION=$(./version.sh)
    - echo "Building signald version $VERSION"
  script:
    - gbp dch --ignore-branch --debian-tag="%(version)s" --git-author --new-version="$VERSION"
    - cat debian/changelog
    - dpkg-buildpackage -b
    - cp -rv ../signald_${VERSION}* .
  cache:
    key: deb-arm-builder
  artifacts:
    paths:
      - "signald_*"

build-docker:
  image: docker:latest
  stage: build
  needs: []
  only:
    refs:
      - tags
      - main
  before_script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - if [[ ! -z "${DOCKER_HUB_USERNAME}" ]]; then docker login -u ${DOCKER_HUB_USERNAME} -p ${DOCKER_HUB_PASSWORD}; fi
  script:
    - docker build --build-arg "CI_BUILD_REF_NAME=${CI_BUILD_REF_NAME}" --build-arg "CI_COMMIT_SHA=${CI_COMMIT_SHA}" -t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG} .
    - docker push ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}
    - if [[ "${CI_COMMIT_REF_SLUG}" == "main" ]]; then docker tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG} ${CI_REGISTRY_IMAGE}:latest; fi;
    - if [[ "${CI_COMMIT_REF_SLUG}" == "main" ]]; then docker push ${CI_REGISTRY_IMAGE}:latest; fi;
    - if [[ ! -z "${DOCKER_HUB_USERNAME}" ]]; then docker tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG} ${DOCKER_HUB_USERNAME}/signald:${CI_COMMIT_REF_SLUG}; fi
    - if [[ ! -z "${DOCKER_HUB_USERNAME}" ]]; then docker push ${DOCKER_HUB_USERNAME}/signald:${CI_COMMIT_REF_SLUG}; fi
    - if [[ ! -z "${DOCKER_HUB_USERNAME}" ]] && [[ "${CI_COMMIT_REF_SLUG}" == "main" ]]; then docker tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG} ${DOCKER_HUB_USERNAME}/signald:latest; fi
    - if [[ ! -z "${DOCKER_HUB_USERNAME}" ]] && [[ "${CI_COMMIT_REF_SLUG}" == "main" ]]; then docker push ${DOCKER_HUB_USERNAME}/signald:latest; fi

integration tests x86:
  image: openjdk:11-jdk
  stage: test
  needs: []
  before_script:
    - cp tools/log4j2.xml src/main/resources/log4j2.xml
  script:
    - ./gradlew integrationTest --info
  variables:
    SIGNAL_URL: https://signal-server.signald.org
  artifacts:
    reports:
      junit: build/test-results/integrationTest/TEST-*.xml

integration tests aarch64:
  image: debian
  stage: test
  extends: .arm-build
  needs: ["build java11 aarch64 glibc"]
  before_script:
    - apt update && apt install -y make openjdk-11-jdk-headless
  script:
    - ./gradlew integrationTest --info
  variables:
    SIGNAL_URL: https://signal-server.signald.org
  artifacts:
    reports:
      junit: build/test-results/integrationTest/TEST-*.xml

documentation:
  image: openjdk:11-jdk
  stage: docs
  script:
    - build/install/signald/bin/signald --dump-protocol > protocol.json
  needs: ["build java11 x86"]
  artifacts:
    paths:
      - protocol.json

docs.signald.org:
  stage: downstreams
  needs: [documentation]
  trigger: signald/docs.signald.org
  only:
    - main

